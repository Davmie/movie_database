// Package docs Code generated by swaggo/swag. DO NOT EDIT
package docs

import "github.com/swaggo/swag"

const docTemplate = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{escape .Description}}",
        "title": "{{.Title}}",
        "contact": {},
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/actors": {
            "post": {
                "description": "Create an actor",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "actors"
                ],
                "summary": "Create an actor",
                "parameters": [
                    {
                        "type": "string",
                        "description": "token",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    },
                    {
                        "description": "actor info",
                        "name": "actor",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.Actor"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "actor created",
                        "schema": {
                            "$ref": "#/definitions/models.Actor"
                        }
                    },
                    "400": {
                        "description": "invalid body"
                    },
                    "401": {
                        "description": "no auth"
                    },
                    "403": {
                        "description": "forbidden"
                    },
                    "500": {
                        "description": "internal server error"
                    }
                }
            }
        },
        "/actors/{id}": {
            "get": {
                "description": "Get info about an actor by id",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "actors"
                ],
                "summary": "Get actor",
                "parameters": [
                    {
                        "type": "string",
                        "description": "token",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "ACT_ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "success get actor",
                        "schema": {
                            "$ref": "#/definitions/models.Actor"
                        }
                    },
                    "401": {
                        "description": "no auth"
                    },
                    "403": {
                        "description": "forbidden"
                    },
                    "404": {
                        "description": "Actor not found"
                    },
                    "500": {
                        "description": "internal server error"
                    }
                }
            },
            "put": {
                "description": "Update info about an actor by id",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "actors"
                ],
                "summary": "Update actor",
                "parameters": [
                    {
                        "type": "string",
                        "description": "token",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "ACT_ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "actor info",
                        "name": "actor",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.Actor"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Actor updated",
                        "schema": {
                            "$ref": "#/definitions/models.Actor"
                        }
                    },
                    "400": {
                        "description": "invalid body"
                    },
                    "401": {
                        "description": "no auth"
                    },
                    "403": {
                        "description": "forbidden"
                    },
                    "404": {
                        "description": "Actor not found"
                    },
                    "500": {
                        "description": "internal server error"
                    }
                }
            },
            "delete": {
                "description": "Delete info about an actor by id",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "actors"
                ],
                "summary": "Delete actor",
                "parameters": [
                    {
                        "type": "string",
                        "description": "token",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "ACT_ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Actor deleted",
                        "schema": {
                            "$ref": "#/definitions/models.Actor"
                        }
                    },
                    "401": {
                        "description": "no auth"
                    },
                    "403": {
                        "description": "forbidden"
                    },
                    "404": {
                        "description": "Actor not found"
                    },
                    "500": {
                        "description": "internal server error"
                    }
                }
            }
        },
        "/actors/{id}/movies": {
            "get": {
                "description": "Get list of actor's movies by id",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "actors"
                ],
                "summary": "Get actor's movies",
                "parameters": [
                    {
                        "type": "string",
                        "description": "token",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "ACT_ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "success get movies by actor",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.Actor"
                            }
                        }
                    },
                    "401": {
                        "description": "no auth"
                    },
                    "403": {
                        "description": "forbidden"
                    },
                    "404": {
                        "description": "Actor not found"
                    },
                    "500": {
                        "description": "internal server error"
                    }
                }
            }
        },
        "/movies/create": {
            "post": {
                "description": "Create a movie",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "movies"
                ],
                "summary": "Create a movie",
                "parameters": [
                    {
                        "type": "string",
                        "description": "token",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    },
                    {
                        "description": "movie info",
                        "name": "movie",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.Movie"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "movie created",
                        "schema": {
                            "$ref": "#/definitions/models.Movie"
                        }
                    },
                    "400": {
                        "description": "invalid body"
                    },
                    "401": {
                        "description": "no auth"
                    },
                    "403": {
                        "description": "forbidden"
                    },
                    "500": {
                        "description": "internal server error"
                    }
                }
            }
        },
        "/movies/sorted": {
            "get": {
                "description": "Get list of movies sorted by specified column",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "movies"
                ],
                "summary": "Get sorted movies",
                "parameters": [
                    {
                        "type": "string",
                        "description": "token",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "MOV_ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "success get sorted movies",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.Actor"
                            }
                        }
                    },
                    "401": {
                        "description": "no auth"
                    },
                    "403": {
                        "description": "forbidden"
                    },
                    "404": {
                        "description": "Movie not found"
                    },
                    "500": {
                        "description": "internal server error"
                    }
                }
            }
        },
        "/movies/title": {
            "get": {
                "description": "Get list of movies by fragment of title",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "movies"
                ],
                "summary": "Get movies by title",
                "parameters": [
                    {
                        "type": "string",
                        "description": "token",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "title",
                        "name": "title",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "success get movies by title",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.Actor"
                            }
                        }
                    },
                    "401": {
                        "description": "no auth"
                    },
                    "403": {
                        "description": "forbidden"
                    },
                    "404": {
                        "description": "Movies not found"
                    },
                    "500": {
                        "description": "internal server error"
                    }
                }
            }
        },
        "/movies/{id}": {
            "get": {
                "description": "Get info about a movie by id",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "movies"
                ],
                "summary": "Get movie",
                "parameters": [
                    {
                        "type": "string",
                        "description": "token",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "MOV_ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "success get movie",
                        "schema": {
                            "$ref": "#/definitions/models.Movie"
                        }
                    },
                    "401": {
                        "description": "no auth"
                    },
                    "403": {
                        "description": "forbidden"
                    },
                    "404": {
                        "description": "Movie not found"
                    },
                    "500": {
                        "description": "internal server error"
                    }
                }
            },
            "put": {
                "description": "Update info about a movie by id",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "movies"
                ],
                "summary": "Update movie",
                "parameters": [
                    {
                        "type": "string",
                        "description": "token",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "MOV_ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "movie info",
                        "name": "movie",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.Movie"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Movie updated",
                        "schema": {
                            "$ref": "#/definitions/models.Movie"
                        }
                    },
                    "400": {
                        "description": "invalid body"
                    },
                    "401": {
                        "description": "no auth"
                    },
                    "403": {
                        "description": "forbidden"
                    },
                    "404": {
                        "description": "Movie not found"
                    },
                    "500": {
                        "description": "internal server error"
                    }
                }
            },
            "delete": {
                "description": "Delete info about a movie by id",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "movies"
                ],
                "summary": "Delete movie",
                "parameters": [
                    {
                        "type": "string",
                        "description": "token",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "MOV_ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Movie deleted",
                        "schema": {
                            "$ref": "#/definitions/models.Movie"
                        }
                    },
                    "401": {
                        "description": "no auth"
                    },
                    "403": {
                        "description": "forbidden"
                    },
                    "404": {
                        "description": "Movie not found"
                    },
                    "500": {
                        "description": "internal server error"
                    }
                }
            }
        },
        "/movies/{id}/actors": {
            "get": {
                "description": "Get list of movies' actors by id",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "movies"
                ],
                "summary": "Get movies' actors",
                "parameters": [
                    {
                        "type": "string",
                        "description": "token",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "MOV_ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "success get actors by movie",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.Actor"
                            }
                        }
                    },
                    "401": {
                        "description": "no auth"
                    },
                    "403": {
                        "description": "forbidden"
                    },
                    "404": {
                        "description": "Movie not found"
                    },
                    "500": {
                        "description": "internal server error"
                    }
                }
            }
        },
        "/users/login": {
            "post": {
                "description": "User sign in with login and password",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "users"
                ],
                "summary": "User login",
                "parameters": [
                    {
                        "description": "user login and password",
                        "name": "user",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/delivery.LoginForm"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "User signed in",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "invalid body"
                    },
                    "404": {
                        "description": "User not found"
                    },
                    "500": {
                        "description": "internal server error"
                    }
                }
            }
        }
    },
    "definitions": {
        "delivery.LoginForm": {
            "type": "object",
            "properties": {
                "login": {
                    "type": "string"
                },
                "password": {
                    "type": "string"
                }
            }
        },
        "models.Actor": {
            "type": "object",
            "properties": {
                "birthday": {
                    "type": "string"
                },
                "firstName": {
                    "type": "string"
                },
                "gender": {
                    "type": "integer"
                },
                "id": {
                    "type": "integer"
                },
                "lastName": {
                    "type": "string"
                }
            }
        },
        "models.Movie": {
            "type": "object",
            "properties": {
                "description": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "rating": {
                    "type": "integer"
                },
                "releaseDate": {
                    "type": "string"
                },
                "title": {
                    "type": "string"
                }
            }
        }
    }
}`

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = &swag.Spec{
	Version:          "1.0",
	Host:             "localhost:8085",
	BasePath:         "",
	Schemes:          []string{},
	Title:            "MovieDataBase Swagger API",
	Description:      "",
	InfoInstanceName: "swagger",
	SwaggerTemplate:  docTemplate,
	LeftDelim:        "{{",
	RightDelim:       "}}",
}

func init() {
	swag.Register(SwaggerInfo.InstanceName(), SwaggerInfo)
}
